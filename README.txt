Лабораторная Работа № 2
Пройдём по всем пунктам по порядку,кроме сборки через Webpack(Базовый уровень: Первый пункт. Расширенный пункт: Второй пункт)
Основной файл лежит в папке dist->index.html
Базовый уровень:
1. В верстке использована сетка Bootstrap, верстка адаптируется экрану на 500px,
1000px, 1500px
	Здесь подразумевается, что экран будет адаптивен под различные размеры экрана(Компьютер,планшет,телефон и прочее)
	Строка 42 container - загоняет все данные в контейнер Bootstrap.
	Строка 44 колонки,которые будут подстраиваться под различные размеры экрана. Позже расскажу,как это проверить.
2. Использованы компоненты Bootstrap: Nav, Cards, Modal, Popover, Toasts
	Bootstrap - был описан выше
	Nav - панель навигации. Та самая панель,в которой находится твой логотив,ссылка "Столицы", и кнопка Загрузить
		Строка 20 - настройка панели
	Cards - карточки которые ты видишь на страничке.Картинка + текст про города
		Строка 46 как пример как создаются карточки для сайта
	Modal - модальные окна с дополинтельной информацией об любом городе с сайте.
		При нажатии на карточку оно всплывает
		Строка 153 - создание блока модального окна.
	Popover - небольшая подсказка,которую можно использовать на сайтах для какой-либо ссылки и доп.информации
		Строка 186 - Создание подсказки в тексте модального окна
		Строки 173-178: Создание подсказки и вывод окна с заголовком и текстом.
		Чтобы закрыть подсказку,просто нажми ещё раз на текст: "Подсказка"
	Toasts - своего рода окно,предположим,для создание анимации загрузки на сайт
		Строка 23 - обращение к скрипту для вызова окна с круговой анимацией
		Строки 26-37: Создание окна Toast

3. Контент каждого объекта уникален, в модальных окнах контент соответствует
объекту, из которого вызван.
	Для этого написан скрипт в строках 229-241
	У каждого окна есть свой номер(data-bs-num) и конкретный номер
	При нажатии на карточку с информацией,запускается скрипт в строках 243-252
	В переменную num запоминается номер формы,на которую нажали,которая дальше переходит в скрипт строками выше
	В нём же мы вытаскиваем конкретный текст для карточки,и заполняем модальное окно
	В этом же скрипте происходит вызов Popover для каждой карточки

Расширенный уровень:
1. Страница адаптивна при любой ширине экрана в диапазоне от 500px до
1500px, при этом используется 6 брейкпоинтов (xs, sm, md, lg, xl, xxl). Нужно
добавить свой breakpoint для широкого экрана.
	Переход вёрстки к определённым размерам находится,как пример, в строке 44
	Брейкпоинты находятся в папке: src->sccs->_custom.scss
	Был добавлен брейкпоинт: xxxl: 1600px
2. Всплывающее окно переключается между объектами при помощи
клавиш-курсоров (стрелки влево и вправо на клавиатуре) без использования
доп.атрибутов в HTML. Например: открываем модальное окно первого объекта,
нажимаем “вправо” и окно переключается.
	Скрипт в строках 254-262	
	Нажимаем на кнопку вправо,увеличиваем значение окна на один,и передаём информацию по следующему окну
	Нажимаем на кнопку влево,уменьшаем значение окна на один,и передаём информацию по предыдущему окну
	В целом,всё просто

3. В Toasts вместо <img> используется иконка загрузки FontAwesome с
бесконечной анимацией (например: вращение по часовой стрелке вокруг
центра).
	Подключаем FontAwesome в строке 10 для вохможности использовать картинку
	Строка 29 - задаём картинку fa fa-spinner fa-pulse fa-3x
	В FontAwesome они обозначаются так,если что


Теперь переходим к сборке через Webpack
В файле package.json была прописана строка 7: "build": "webpack", которая запускает сборку через Webpack
Webpack обрабатывает файлы лабораторки,и поизводит их сборку для работы
4. Исходники Bootstrap, jQuery и собственные стили собираются через Webpack
	Сборка стартует из файла index.js в папке src.
	Данный файл испортирует стили лабораторки по тому пути,который указан, в нашем случае ./scss/styles.scss
	style.scss - испортирует твои брейкпоинты для вёрстки из файла custom и Bootstrap для адаптивной вёрстки
	Дальше Webpack проверяет все файлы на различные изменения,и выдаёт либо успех либо ошибки,если таковые имеются.

Чтобы запустить сборку через Webpack снизу кликаешь на Terminal, и прописываешь: npm run build, который запускает сборку
Дальше запускаешь файл с вёрсткой(dist->index.html)
Если,допустим,что-то изменишь в любом из файлов для сайта,и обновишь страницу то изменения незамедлительно применятся,так как Webpack увидел изменения в файлах,и перекомпилил вёрстку
Чтобы закончить сборку,в Terminal делаешь сочетание клавиш: CTRL+C, и вводишь букву y. Больше Webpack не будет принимать изменения,которые происходят в файлах Лабораторки.

Теперь как проверить адаптивность вёрстки.
Открываешь вёрстку в браузере,и нажимаешь F12.
В левом верхнем углу нажимаешь на второй значок(Телефон и планшет)
После чего можешь уменьшать или увеличивать размер экрана,и смотреть на то как вёрстка адаптируется под размеры